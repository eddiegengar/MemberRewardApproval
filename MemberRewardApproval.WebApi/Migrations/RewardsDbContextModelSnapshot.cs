// <auto-generated />
using System;
using MemberRewardApproval.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MemberRewardApproval.WebApi.Migrations
{
    [DbContext(typeof(RewardsDbContext))]
    partial class RewardsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MemberRewardApproval.WebApi.Models.MemberPerformance", b =>
                {
                    b.Property<string>("WynnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ADT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AvgBet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Playtime")
                        .HasColumnType("time");

                    b.Property<decimal>("TheoWin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WinLoss")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("WynnId");

                    b.ToTable("MemberPerformances");

                    b.HasData(
                        new
                        {
                            WynnId = "W001",
                            ADT = 30m,
                            AvgBet = 100m,
                            Playtime = new TimeSpan(0, 5, 0, 0, 0),
                            TheoWin = 120m,
                            WinLoss = 50m
                        },
                        new
                        {
                            WynnId = "W002",
                            ADT = 50m,
                            AvgBet = 200m,
                            Playtime = new TimeSpan(0, 8, 0, 0, 0),
                            TheoWin = 180m,
                            WinLoss = 75m
                        });
                });

            modelBuilder.Entity("MemberRewardApproval.WebApi.Models.RewardRequest", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RewardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WynnId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.ToTable("RewardRequests");
                });

            modelBuilder.Entity("MemberRewardApproval.WebApi.Models.Supervisor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AadId = "6f6a353c0843453e",
                            Email = "eddiegengar@gmail.com",
                            Name = "Supervisor1"
                        },
                        new
                        {
                            Id = "2",
                            AadId = "AAD-ID-2",
                            Email = "supervisor2@example.com",
                            Name = "Supervisor2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
